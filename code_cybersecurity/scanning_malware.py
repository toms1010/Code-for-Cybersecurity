import subprocess

# Function to run CMD commands and print output
def run_command(command):
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        print(f"\n>>> {command}")
        print(result.stdout if result.stdout else result.stderr)
    except Exception as e:
        print(f"Error: {e}")

# 1. Windows Defender Scan
def defender_scan():
    print("\nüîç Running Windows Defender Scans...")
    run_command(r'%ProgramFiles%\Windows Defender\MpCmdRun.exe -Scan -ScanType 1')  # Quick scan
    run_command(r'%ProgramFiles%\Windows Defender\MpCmdRun.exe -Scan -ScanType 2')  # Full scan

# 2. Check Suspicious Processes
def check_processes():
    print("\nüî• Checking Running Processes...")
    run_command('wmic process get description,executablepath')

# 3. Check Active Network Connections
def check_network_connections():
    print("\nüåê Checking Active Network Connections...")
    run_command('netstat -ano')

# 4. System File Checker (SFC)
def run_sfc():
    print("\n‚úÖ Running System File Checker (SFC)...")
    run_command('sfc /scannow')

# 5. Restore System Health with DISM
def run_dism():
    print("\nüõ°Ô∏è Restoring System Health with DISM...")
    run_command('DISM /Online /Cleanup-Image /RestoreHealth')

# 6. List Hidden Files (Possible Malware)
def list_hidden_files():
    print("\nüîç Listing Hidden Files on C: Drive...")
    run_command('dir /a:h /s C:\\')

# 7. Check Startup Programs
def check_startup_programs():
    print("\nüö´ Checking Suspicious Startup Programs...")
    run_command('wmic startup get caption,command')

# 8. Run Microsoft Safety Scanner
def run_safety_scanner():
    print("\nüî• Running Microsoft Safety Scanner...")
    run_command('msert.exe')

# Menu-driven program
def main():
    while True:
        print("\nüõ†Ô∏è Malware Detection Program")
        print("1. Windows Defender Scan")
        print("2. Check Running Processes")
        print("3. Check Active Network Connections")
        print("4. Run System File Checker (SFC)")
        print("5. Restore System Health with DISM")
        print("6. List Hidden Files")
        print("7. Check Startup Programs")
        print("8. Run Microsoft Safety Scanner")
        print("9. Exit")

        choice = input("\nChoose an option: ")

        if choice == '1':
            defender_scan()
        elif choice == '2':
            check_processes()
        elif choice == '3':
            check_network_connections()
        elif choice == '4':
            run_sfc()
        elif choice == '5':
            run_dism()
        elif choice == '6':
            list_hidden_files()
        elif choice == '7':
            check_startup_programs()
        elif choice == '8':
            run_safety_scanner()
        elif choice == '9':
            print("\n‚úÖ Exiting program...")
            break
        else:
            print("\n‚ùå Invalid choice. Try again.")

# Run the program
if __name__ == "__main__":
    main()
